;-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
;-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
 
; This is the Main Menu configuration file.
; Viewport, Camera and other bits and bobs go here.
 
;-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
;-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
 
; [ViewportTemplate]
; BackgroundClear    = <bool>                ; Specifies if the background should be cleared before rendering it. Its default value is true.
; BackgroundColor    = <vector>              ; Defines which color will be used for clearing the viewport before rendering it. Its default value is black (0, 0, 0).
; Camera             = CameraTemplate        ; Template name of the camera that will be linked to this viewport. Each camera template will correspond to a unique camera at runtime. This means that if you use more than one viewport linked to the same camera, they will render the same content as seen by this camera.
; RelativePosition   = left|right|top|bottom ; Defines where the viewport will be placed in the main display. It should be a combination of two attributes. Ex.: 'top left' to have your viewport in the top left corner. Its default value is 'top left'.
; Position           = <vector>              ; Defines an absolute position for the viewport in the main display, in pixel coordinates. This value is only used if none is provided for RelativePosition.
; RelativeSize       = <vector>              ; Defines the viewport size relatively to the main display's one, ie. (1, 1, 0) means that it will cover the full display. Its default value is (1, 1, 0). The Z coordinate is ignored.
; Size               = <vector>              ; Defines the absolute viewport size, in pixels. This value is only used if none is provided for RelativeSize.
; ShaderList         = <list#list>           ; Defines a list of shaders that will be executed every time this viewport is rendered. Up to 4 shaders can be specified. By default, no shader is used.
; Texture            = path/to/TextureFile   ; Defines a texture where the viewport will be rendered. Its default value is the main display (ie. screen). NB: orx's default display plugin based on SFML doesn't support this property.
 
[Viewport] ;==================================
Camera               = Camera
BackgroundColor      = (255, 255, 255)
 
;-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
 
; [CameraTemplate]
; FrustumHeight      = <float>               ; As orx's cameras are 2D ones, their frustum are rectangle cuboids instead of real frustums.
; FrustumWidth       = <float>               ;  - If you want to achieve a 1:1 aspect ratio with your main display window, you can use the Display.ScreenHeight and Display.ScreenWidth values.
; FrustumNear        = <float>               ; Defines the near plane for the camera frustum. The near plane is excluded when doing render culling.
; FrustumFar         = <float>               ; Defines the far plane for the camera frustum. The far plane is included when doing render culling.
; Position           = <vector>              ; Camera's initial position.
; Rotation           = <float>               ; Camera's initial rotation (along its Z-axis).
; Zoom               = <float>               ; Camera's initial zoom.
 
 
[Camera] ;====================================
FrustumWidth         = @Display.ScreenWidth
FrustumHeight        = @Display.ScreenHeight
FrustumFar           = 2.0                   ; Frustum Near and Far are based upon the position of the camera. 0.0 minimum to +infinite.
FrustumNear          = 0.0                   ; You cannot set this value 'behind' the camera.
Position             = (0.0, 0.0, -1.0)
 
;-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
;-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
;-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-